import * as tslib_1 from "tslib";
import * as React from "react";
import { observer, Observer } from "mobx-react";
import { SelectBox } from "@alethio/ui/lib/control/SelectBox";
import { Radio } from "@alethio/ui/lib/control/Radio";
import { HighlightSelectBox } from "../../box/HighlightSelectBox";
let TxHighlightSelector = class TxHighlightSelector extends React.Component {
    constructor() {
        super(...arguments);
        this.onCheckboxChange = (_e, checked, _name, value) => {
            if (checked) {
                this.props.fields.setSelectedField(value);
            }
            this.requestClose();
        };
    }
    render() {
        let { translation: tr } = this.props;
        return (React.createElement(SelectBox, { disabled: this.props.disabled, offset: { left: -20, top: -47 }, render: ({ requestClose }) => {
                this.requestClose = requestClose;
                return (React.createElement(Observer, null, () => this.props.fields.getFields().map((f) => {
                    return (React.createElement(Radio, { id: "highlight_" + f.key, key: f.key, value: f.key, name: "highlight", checked: this.props.fields.getSelectedField().key === f.key, onChange: this.onCheckboxChange }, f.getLabel(tr)));
                })));
            } },
            React.createElement(HighlightSelectBox, { disabled: this.props.disabled }, this.props.fields.getSelectedField().getLabel(tr))));
    }
};
TxHighlightSelector = tslib_1.__decorate([
    observer
], TxHighlightSelector);
export { TxHighlightSelector };
//# sourceMappingURL=TxHighlightSelector.js.map