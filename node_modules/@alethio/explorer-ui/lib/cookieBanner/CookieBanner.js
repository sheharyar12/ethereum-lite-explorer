import * as tslib_1 from "tslib";
import * as React from "react";
import styled from "../styled-components";
import { Label } from "@alethio/ui/lib/data/Label";
import { Button } from "@alethio/ui/lib/control/Button";
import { StatusOkIcon } from "@alethio/ui/lib/icon/StatusOkIcon";
import { observer } from "mobx-react";
import { MoreInfoIcon } from "@alethio/ui/lib/icon/MoreInfoIcon";
import { withInternalNav } from "plugin-api/withInternalNav";
import { Link } from "plugin-api/component/Link";
const CookieBannerRoot = styled("div") `
    background-color: ${({ theme }) => theme.colors.cookieBannerBg};
    padding: 6px 24px 6px 24px;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    color: #FFFFFF;

    @media ${(props) => props.theme.mediaQueries.breakPoints.smallerThanStandardView} {
        padding-left: 8px;
        padding-right: 8px;
    }
    @media only screen and (max-width: 900px) {
        flex-direction: column;
    }
`;
const CookieLabel = styled(Label) `
    color: #FFFFFF;
`;
const CookieText = styled.div `
    padding: 0 16px 0 16px;
`;
const ButtonsContainer = styled.div `
    display: flex;
    padding: 8px 0;
`;
const FixedSizeFlex = styled.div `
    flex: 0 0 auto;
`;
const ExpanderFlex = styled.div `
    flex: 1 1 auto;
`;
let $CookieBanner = class $CookieBanner extends React.Component {
    constructor() {
        super(...arguments);
        this.acceptCookies = () => {
            this.props.state.cookiesAccepted = true;
        };
    }
    render() {
        let tr = this.props.translations;
        let cookieTexts = tr.text.split("%s");
        let privacyPolicyUri = "page://aleth.io/privacy-policy";
        if (!this.props.internalNav.resolve(privacyPolicyUri)) {
            return null;
        }
        return this.props.state.cookiesAccepted ? null : (React.createElement(CookieBannerRoot, Object.assign({}, this.props),
            React.createElement(FixedSizeFlex, null,
                React.createElement(CookieLabel, null, tr.title)),
            React.createElement(ExpanderFlex, null,
                React.createElement(CookieText, null,
                    cookieTexts[0],
                    React.createElement(Link, { to: privacyPolicyUri }, cookieTexts[1]),
                    cookieTexts[2])),
            React.createElement(FixedSizeFlex, null,
                React.createElement(ButtonsContainer, null,
                    React.createElement(Button, { colors: "primary", Icon: StatusOkIcon, onClick: this.acceptCookies }, tr.accept),
                    React.createElement("div", { style: { width: 24 } }),
                    React.createElement(Link, { to: `${privacyPolicyUri}#cookies` },
                        React.createElement(Button, { colors: "primary", Icon: MoreInfoIcon }, tr.moreInfo))))));
    }
};
$CookieBanner = tslib_1.__decorate([
    observer
], $CookieBanner);
export const CookieBanner = withInternalNav($CookieBanner);
//# sourceMappingURL=CookieBanner.js.map