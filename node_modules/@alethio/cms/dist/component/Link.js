import * as React from "react";
import { HashLink as ReactRouterLink } from "react-router-hash-link";
import { ExternalLink } from "@alethio/ui/lib/control/ExternalLink";
import { LinkContext } from "./LinkContext";
import { InternalUrlResolver } from "../InternalUrlResolver";
export class Link extends React.PureComponent {
    render() {
        let { to, className } = this.props;
        if (/^(http|https):\/\/.*$/.test(to)) {
            return React.createElement(ExternalLink, { href: to, rel: "noopener noreferrer" }, this.props.children);
        }
        if (/^\/$/.test(to)) {
            return React.createElement(ReactRouterLink, { style: { textDecoration: "none", outline: "none" }, className: className, to: to }, this.props.children);
        }
        const pageUriMatch = to.match(/^page:\/\/[^?#]+/);
        if (pageUriMatch) {
            return React.createElement(LinkContext.Consumer, null, ({ pages }) => {
                if (!pages) {
                    throw new Error(`Missing link context`);
                }
                let resolvedUrl = new InternalUrlResolver(pages).resolve(to);
                if (!resolvedUrl) {
                    return this.props.children;
                }
                return React.createElement(ReactRouterLink, { style: { textDecoration: "none", outline: "none" }, className: className, to: resolvedUrl }, this.props.children);
            });
        }
        throw new Error(`Relative URLs are not supported`);
    }
}
//# sourceMappingURL=Link.js.map