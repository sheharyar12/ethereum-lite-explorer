import * as React from "react";
import { AsyncData } from "../AsyncData";
import { ILogger } from "plugin-api/ILogger";
import { ILiveContentProps } from "./ILiveContentProps";
declare type ReactComponentType<T> = React.ComponentClass<T> | React.StatelessComponent<T>;
interface ILiveDataProps<TContentProps> {
    logger: ILogger;
    ContentComponent: Promise<ReactComponentType<TContentProps & ILiveContentProps>>;
    contentProps: TContentProps;
    ErrorComponent?: ReactComponentType<TContentProps & ILiveContentProps>;
    LoadingComponent?: ReactComponentType<TContentProps & ILiveContentProps>;
    asyncData: Map<string, AsyncData<unknown>>;
    requiredAdapterTypes: string[];
}
export declare class LiveData<TContentProps> extends React.Component<ILiveDataProps<TContentProps>, {}> {
    private contentComponentBoxed;
    constructor(props: ILiveDataProps<TContentProps>);
    render(): JSX.Element | null;
}
export {};
//# sourceMappingURL=LiveData.d.ts.map