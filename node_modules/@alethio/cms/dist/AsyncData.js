import { __decorate } from "tslib";
import { LoadStatus } from "./LoadStatus";
import { observable, action } from "mobx";
export class AsyncData {
    constructor(data) {
        this.loadStatus = LoadStatus.Loading;
        this.data = data;
    }
    isLoaded() {
        return this.loadStatus === LoadStatus.Loaded;
    }
    isLoading() {
        return this.loadStatus === LoadStatus.Loading;
    }
    update(data) {
        this.data = data;
        this.loadStatus = data ? LoadStatus.Loaded : LoadStatus.Error;
    }
    reset() {
        this.data = void 0;
        this.loadStatus = LoadStatus.Loading;
    }
}
__decorate([
    observable.ref
], AsyncData.prototype, "data", void 0);
__decorate([
    observable
], AsyncData.prototype, "loadStatus", void 0);
__decorate([
    action
], AsyncData.prototype, "update", null);
__decorate([
    action
], AsyncData.prototype, "reset", null);
//# sourceMappingURL=AsyncData.js.map