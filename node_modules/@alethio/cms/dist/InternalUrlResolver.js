export class InternalUrlResolver {
    constructor(pages) {
        this.pages = pages;
    }
    resolve(pageUri) {
        const pageUriMatch = pageUri.match(/^page:\/\/[^?#]+/);
        if (pageUriMatch) {
            const pages = this.pages;
            let uri = new URL(pageUri);
            let pageMeta = pages.find(p => p.uri === pageUriMatch[0]);
            if (!pageMeta || !pageMeta.def.buildCanonicalUrl) {
                return false;
            }
            let searchParams = {};
            uri.searchParams.forEach((v, k) => searchParams[k] = v);
            let resolvedUrl = pageMeta.def.buildCanonicalUrl(searchParams) + uri.hash;
            return resolvedUrl;
        }
        else {
            throw new Error(`URI "${pageUri}" doesn't look like a page:// URI`);
        }
    }
}
//# sourceMappingURL=InternalUrlResolver.js.map