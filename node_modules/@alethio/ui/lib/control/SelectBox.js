import * as tslib_1 from "tslib";
import * as React from "react";
import * as ReactDOM from "react-dom";
import styled from "../styled-components";
import { Manager, Reference, Popper } from "react-popper";
import { observer } from "mobx-react";
import { observable } from "mobx";
import { ModalSelectBox } from "./ModalSelectBox";
const Overlay = styled.div.withConfig({ displayName: "Overlay", componentId: "sc-12wc7lq" }) `
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
`;
let SelectBox = class SelectBox extends React.Component {
    constructor() {
        super(...arguments);
        this.isOpened = false;
        this.openSelectBox = () => {
            this.isOpened = true;
        };
        this.closeSelectBox = () => {
            this.isOpened = false;
        };
    }
    render() {
        let { disabled } = this.props;
        return (React.createElement(Manager, null,
            React.createElement(Reference, null, ({ ref }) => React.createElement("div", { ref: ref, onClick: !disabled ? this.openSelectBox : void 0, style: {
                    cursor: !disabled ? "pointer" : "default"
                } }, this.props.children)),
            this.isOpened ?
                ReactDOM.createPortal(React.createElement(React.Fragment, null,
                    React.createElement(Overlay, { onClick: this.closeSelectBox }),
                    React.createElement(Popper, { modifiers: {
                            offset: {
                                offset: this.props.offset ?
                                    this.props.offset.left + "px, " + this.props.offset.top + "px" :
                                    "auto"
                            },
                            flip: {
                                enabled: false
                            },
                            preventOverflow: {
                                enabled: true
                            },
                            hide: {
                                enabled: false
                            }
                        }, placement: "bottom-start" }, ({ ref, placement, style }) => (React.createElement("div", { ref: ref, "data-placement": placement, style: style },
                        React.createElement(ModalSelectBox, { onClose: this.closeSelectBox }, this.props.render({ requestClose: this.closeSelectBox })))))), document.body)
                : null));
    }
};
tslib_1.__decorate([
    observable
], SelectBox.prototype, "isOpened", void 0);
SelectBox = tslib_1.__decorate([
    observer
], SelectBox);
export { SelectBox };
//# sourceMappingURL=SelectBox.js.map