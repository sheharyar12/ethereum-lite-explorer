import * as tslib_1 from "tslib";
import * as React from "react";
import { observer } from "mobx-react";
import styled from "../styled-components";
import { RadioOnIcon } from "../icon/RadioOnIcon";
import { RadioOffIcon } from "../icon/RadioOffIcon";
const RadioWrapper = styled.div.withConfig({ displayName: "RadioWrapper", componentId: "sc-r6b0x2" }) `
    padding: 8px 8px 8px 32px;
    position: relative;
`;
const RadioLabel = styled.label.withConfig({ displayName: "RadioLabel", componentId: "sc-n7z665" }) `
    text-transform: uppercase;
    display: block;
    font-size: 12px;
    line-height: 16px;
    font-weight: 600;
    color: ${({ theme }) => theme.colors.checkboxLabel};
`;
const RadioIconWrapper = styled.div.withConfig({ displayName: "RadioIconWrapper", componentId: "sc-1uu34bz" }) `
    position: absolute;
    top: 4px;
    left: 4px;
    color: ${({ theme }) => theme.colors.checkboxIcon};
`;
let Radio = class Radio extends React.Component {
    constructor() {
        super(...arguments);
        this.onChange = (event) => {
            if (this.props.onChange) {
                this.props.onChange(event, true, this.props.name, this.props.value);
            }
        };
    }
    render() {
        return (React.createElement(RadioWrapper, null,
            React.createElement("input", { type: "radio", id: this.props.id, name: "radio_" + this.props.name, value: this.props.value, checked: this.props.checked || false, onChange: this.onChange, style: { display: "none" } }),
            React.createElement(RadioLabel, { htmlFor: this.props.id },
                React.createElement(RadioIconWrapper, null, this.props.checked ? React.createElement(RadioOnIcon, null) : React.createElement(RadioOffIcon, null)),
                this.props.children)));
    }
};
Radio = tslib_1.__decorate([
    observer
], Radio);
export { Radio };
//# sourceMappingURL=Radio.js.map