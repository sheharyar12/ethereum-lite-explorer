Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Interprets warnings generated by webpack and formats them
 */
function formatBuildWarning(warning) {
    let filePath;
    let line;
    let column;
    let message;
    if (warning.rawMessage && warning.file && warning.location) {
        // Looks like a standard webpack object
        filePath = warning.file;
        line = warning.location.line;
        column = warning.location.character;
        // This treats fork-ts-checker warnings nicely
        let match = warning.rawMessage.match(/^warning ([a-z0-9-_]+: [\s\S]*)$/i);
        if (match) {
            message = "warning " + match[1];
        }
        else {
            message = "warning WEBPACK: " + warning.rawMessage;
        }
        return filePath + ' (' + line + ',' + column + '): ' + message;
    }
    return warning.message.trim();
}
/**
 * Formats an array of webpack warnings
 */
function formatWarnings(warnings) {
    var ret = [];
    if (warnings && warnings.length) {
        for (var i = 0; i < warnings.length; ++i) {
            ret.push(formatBuildWarning(warnings[i]));
        }
    }
    return ret;
}
exports.formatWarnings = formatWarnings;
