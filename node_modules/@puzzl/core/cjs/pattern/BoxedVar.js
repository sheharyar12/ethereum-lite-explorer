"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const EventDispatcher_1 = require("../event/EventDispatcher");
/**
 * Store a primitive value inside an object, so it can be passed by reference
 *
 * This is particularly useful when passing primitives with dependency injection,
 * because their value might not be known at construction time.
 * See variable boxing/unboxing in Java or C#.
 */
class BoxedVar {
    constructor(value) {
        this._onChange = new EventDispatcher_1.EventDispatcher();
        if (value !== void 0) {
            this.value = value;
        }
    }
    get value() {
        return this._value;
    }
    set value(value) {
        this._value = value;
        this._onChange.dispatch(this, value);
    }
    get onChange() {
        return this._onChange;
    }
}
exports.BoxedVar = BoxedVar;
//# sourceMappingURL=BoxedVar.js.map