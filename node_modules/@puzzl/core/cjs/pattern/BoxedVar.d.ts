import { IEvent } from "../event/EventDispatcher";
/**
 * Store a primitive value inside an object, so it can be passed by reference
 *
 * This is particularly useful when passing primitives with dependency injection,
 * because their value might not be known at construction time.
 * See variable boxing/unboxing in Java or C#.
 */
export declare class BoxedVar<T> {
    private _value;
    private _onChange;
    constructor(value?: T);
    value: T | undefined;
    readonly onChange: IEvent<this, T | undefined>;
}
//# sourceMappingURL=BoxedVar.d.ts.map