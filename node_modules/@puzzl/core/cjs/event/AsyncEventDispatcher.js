"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Async message queue. Same as EventDispatcher, but listeners can return a Promise
 * instead of a regular value.
 * @see EventDispatcher
 */
class AsyncEventDispatcher {
    constructor() {
        this.listeners = new Set();
    }
    subscribe(listener) {
        this.listeners.add(listener);
    }
    unsubscribe(listener) {
        this.listeners.delete(listener);
    }
    subscribeOnce(listener) {
        let wrapper = (args, sender) => {
            this.unsubscribe(wrapper);
            wrapper = (void 0);
            return listener(args, sender);
        };
        this.subscribe(wrapper);
    }
    dispatch(sender, args) {
        let promiseChain = Promise.resolve();
        this.listeners.forEach(listener => {
            promiseChain = promiseChain.then(() => listener(args, sender));
        });
        return promiseChain;
    }
    asEvent() {
        return this;
    }
}
exports.AsyncEventDispatcher = AsyncEventDispatcher;
//# sourceMappingURL=AsyncEventDispatcher.js.map