// Inspired by https://github.com/eldargab/load-script
/**
 * Loads a JavaScript file by appending a script tag in the document header
 */
export class ScriptLoader {
    constructor(document) {
        this.document = document;
    }
    load(url, opts = {}) {
        return new Promise((resolve, reject) => {
            // document.head should be set on supported browsers
            let head = this.document.head;
            let script = this.document.createElement("script");
            script.type = opts.type || "text/javascript";
            script.charset = opts.charset || "utf8";
            script.async = opts.async !== void 0 ? opts.async : true;
            script.src = url;
            const attrs = opts.attrs;
            if (attrs) {
                Object.keys(attrs).forEach(k => script.setAttribute(k, attrs[k]));
            }
            if (opts.text) {
                script.text = opts.text;
            }
            script.onload = () => {
                resolve();
            };
            // We create the error object here and not inside "onerror" to ensure a proper stack trace
            let err = new Error(`Failed to load script "${url}"`);
            script.onerror = () => {
                reject(err);
            };
            head.appendChild(script);
        });
    }
}
//# sourceMappingURL=ScriptLoader.js.map